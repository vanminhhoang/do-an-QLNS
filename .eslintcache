[{"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\reactRedux\\ReduxSt.js":"1","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\QuenMatKhau\\QuenMatKhau.js":"2","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\reactRedux\\ReduxAc.js":"3","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\Theme\\theme.js":"4","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\component\\InputText\\InputText.js":"5","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\component\\Modal\\ModalWL.js":"6","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\MainActivity\\Chil_Screens\\PhanCongNhanVien.js":"7","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\MainActivity\\Chil_Screens\\DSHoanThanhCongTrinh.js":"8","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\MainActivity\\Chil_Screens\\TienDoCongTrinh\\TienDoCongTrinh.js":"9","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\api\\pushNotify.js":"10","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\serviceWorker.js":"11","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\component\\TextForm\\TextForm.js":"12","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\component\\ButtonForm\\ButtonForm.js":"13","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\component\\SectionDashboard\\SectionDashboard.js":"14","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\MainActivity\\Chil_Screens\\DanhSachNhanVien.js":"15","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\index.js":"16","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\Route\\router.js":"17","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\regex\\regexValidated.js":"18","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\reactRedux\\ReduxRe.js":"19","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\DangNhap\\DangNhap.js":"20","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\LayLaiMatKhau\\LayLaiMatKhau.js":"21","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\MainActivity\\MainActivity.js":"22","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\DoiMatKhau\\DoiMatKhau.js":"23","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\MainActivity\\Chil_Screens\\DanhSachCongTrinh.js":"24","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\MainActivity\\Chil_Screens\\BangLuong.js":"25","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\MainActivity\\Chil_Screens\\ChiTietNhanVien.js":"26","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\component\\HeaderDashboard\\HeaderDashboard.js":"27"},{"size":121,"mtime":1607017393360,"results":"28","hashOfConfig":"29"},{"size":3293,"mtime":1607224818765,"results":"30","hashOfConfig":"29"},{"size":132,"mtime":1607017099646,"results":"31","hashOfConfig":"29"},{"size":376,"mtime":1606709011277,"results":"32","hashOfConfig":"29"},{"size":512,"mtime":1606709011286,"results":"33","hashOfConfig":"29"},{"size":1949,"mtime":1606799289303,"results":"34","hashOfConfig":"29"},{"size":28778,"mtime":1607447663491,"results":"35","hashOfConfig":"29"},{"size":7017,"mtime":1607446347057,"results":"36","hashOfConfig":"29"},{"size":10483,"mtime":1607446057551,"results":"37","hashOfConfig":"29"},{"size":750,"mtime":1607188282305,"results":"38","hashOfConfig":"29"},{"size":5227,"mtime":1606709011316,"results":"39","hashOfConfig":"29"},{"size":351,"mtime":1606709011296,"results":"40","hashOfConfig":"29"},{"size":7954,"mtime":1607443979556,"results":"41","hashOfConfig":"29"},{"size":23174,"mtime":1607445963459,"results":"42","hashOfConfig":"29"},{"size":27861,"mtime":1607447852174,"results":"43","hashOfConfig":"29"},{"size":741,"mtime":1607019643655,"results":"44","hashOfConfig":"29"},{"size":1058,"mtime":1607224820256,"results":"45","hashOfConfig":"29"},{"size":1005,"mtime":1607017048300,"results":"46","hashOfConfig":"29"},{"size":1007,"mtime":1607017382758,"results":"47","hashOfConfig":"29"},{"size":4934,"mtime":1607225156804,"results":"48","hashOfConfig":"29"},{"size":1466,"mtime":1607224809577,"results":"49","hashOfConfig":"29"},{"size":5957,"mtime":1607182457722,"results":"50","hashOfConfig":"29"},{"size":3447,"mtime":1607224781971,"results":"51","hashOfConfig":"29"},{"size":31418,"mtime":1607444884718,"results":"52","hashOfConfig":"29"},{"size":8439,"mtime":1607447317466,"results":"53","hashOfConfig":"29"},{"size":25093,"mtime":1607445287156,"results":"54","hashOfConfig":"29"},{"size":9851,"mtime":1607017953783,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1iijdtt",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\reactRedux\\ReduxSt.js",[],["121","122"],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\QuenMatKhau\\QuenMatKhau.js",[],["123","124"],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\reactRedux\\ReduxAc.js",[],["125","126"],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\Theme\\theme.js",[],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\component\\InputText\\InputText.js",[],["127","128"],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\component\\Modal\\ModalWL.js",["129","130","131","132"],"import React, { useState, useEffect } from 'react'\r\nimport { Modal, Button, Carousel } from 'react-bootstrap'\r\n\r\nfunction ModalWL({ srcImg, show, setShow, header, heightImg, widthImg }) {\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n    const [render, setRender] = useState(null)\r\n\r\n    const _renderImg = () => {\r\n        var temprender = []\r\n        if (srcImg.map != undefined) {\r\n            srcImg.map((current) => {\r\n                temprender.push(\r\n                    <Carousel.Item>\r\n                        <img\r\n                            src={current.default}\r\n                            style={{\r\n                                height: heightImg,\r\n                                width: widthImg,\r\n                            }}\r\n                            alt=\"\"\r\n                        />\r\n                    </Carousel.Item>\r\n                )\r\n            })\r\n        }\r\n        setRender(temprender)\r\n    }\r\n\r\n    useEffect(() => {\r\n        _renderImg()\r\n    }, [])\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose} size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <h5 style={{ color: 'black' }}>{header}</h5>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Carousel>{render}</Carousel>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalWL\r\n\r\n// prop\r\n// array img duoi dang nhu sau\r\n// var srcImg = [\r\n//     require('../../assets/Img/1.jpg'),\r\n//     require('../../assets/Img/2.jpg'),\r\n// ]\r\n// show truyen vao bien de show va close thong bao : false close , true : show\r\n// setShow truyen vao bien de set gia tri cua show\r\n// header : text header\r\n// heightImg : chieu cao anh\r\n// widthImg : chieu rong anh\r\n","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\MainActivity\\Chil_Screens\\PhanCongNhanVien.js",["133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\MainActivity\\Chil_Screens\\DSHoanThanhCongTrinh.js",["156","157","158","159","160","161","162"],"import React, { useEffect, useState } from 'react'\r\n\r\n//import component React Bootstrap\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n//import icon react material ui\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\n//Import react material-ui\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formSearch: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItem: 'center',\r\n        height: '100%',\r\n        padding: '0 20px',\r\n    },\r\n    searchContainer: {\r\n        border: '1px solid black',\r\n        height: '50px',\r\n        width: '100%',\r\n        borderRadius: '50px',\r\n        backgroundColor: 'white',\r\n    },\r\n    searchIcon: {\r\n        fontSize: '30px',\r\n        height: '100%',\r\n        cursor: 'pointer',\r\n        color: 'gray',\r\n    },\r\n    inputSearch: {\r\n        border: 'none',\r\n        outline: 'none',\r\n        height: '100%',\r\n        width: '100%',\r\n        fontSize: '18px',\r\n        fontWeight: '600',\r\n    },\r\n    iconLoad: {\r\n        position: 'absolute',\r\n        minHeight: '500px',\r\n        right: '0',\r\n        left: '0',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n}))\r\n\r\nfunction DSCongTrinhHoanThanh(props) {\r\n    const classes = useStyles()\r\n    const URL_API = 'https://qlnscloud.herokuapp.com/congtrinh2/'\r\n    const GET_CONGTRINH = 'ToanBoCongTrinh'\r\n    const TOKEN = sessionStorage.getItem('token')\r\n\r\n    const [UITableCongTrinhHT, setUITableCongTrinhHT] = useState()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [dataDSCTHT, setDataDSCTHT] = useState()\r\n\r\n    function getDanhSachCongTrinhHT() {\r\n        setLoading(true)\r\n        if (window.fetch) {\r\n            fetch(URL_API + GET_CONGTRINH + '?token=' + TOKEN)\r\n                .then((response) => {\r\n                    return response.json()\r\n                })\r\n                .then((result) => {\r\n                    RenderUITableCongTrinhHT(result.data)\r\n                    setLoading(false)\r\n                })\r\n                .catch((error) => {\r\n                    setLoading(false)\r\n                    console.error('Fetch to false', error)\r\n                })\r\n        } else {\r\n            console.log('Fetch not found')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDanhSachCongTrinhHT()\r\n    }, [])\r\n\r\n    function RenderUITableCongTrinhHT(data) {\r\n        setUITableCongTrinhHT(\r\n            data.map((e) => {\r\n                if (e.TienDo == 100) {\r\n                    return ItemCTHoanThanh(e)\r\n                }\r\n            })\r\n        )\r\n        setDataDSCTHT(\r\n            data.map((e) => {\r\n                if (e.TienDo == 100) {\r\n                    return e\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    var stt = 0\r\n    function ItemCTHoanThanh(props) {\r\n        stt++\r\n        return (\r\n            <TableRow hover>\r\n                <TableCell>{stt}</TableCell>\r\n                <TableCell>{props.TenCT}</TableCell>\r\n                <TableCell>{props.DiaDiem}</TableCell>\r\n                <TableCell>{props.NgayHT}</TableCell>\r\n            </TableRow>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    margin: '20px 0',\r\n                }}\r\n            >\r\n                <h1\r\n                    style={{\r\n                        width: '100%',\r\n                        textAlign: 'center',\r\n                    }}\r\n                >\r\n                    Danh Sách Công Trình Hoàn Thành\r\n                </h1>\r\n            </div>\r\n            <Paper style={{ width: '100%' }}>\r\n                {loading ? (\r\n                    <div className={classes.iconLoad}>\r\n                        <Spinner animation=\"border\" />\r\n                    </div>\r\n                ) : (\r\n                    <div></div>\r\n                )}\r\n                <div className={classes.searchContainer}>\r\n                    <form className={classes.formSearch}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Tìm Kiếm Tên Hoặc Địa Điểm Công Trình\"\r\n                            className={classes.inputSearch}\r\n                            onChange={(event) => {\r\n                                const textSearch = event.target.value.toLowerCase()\r\n                                const regex = new RegExp(textSearch)\r\n                                setUITableCongTrinhHT(\r\n                                    dataDSCTHT.map((e) => {\r\n                                        if (e) {\r\n                                            if (\r\n                                                regex.test(\r\n                                                    e.TenCT.toLowerCase()\r\n                                                ) ||\r\n                                                regex.test(\r\n                                                    e.DiaDiem.toLowerCase()\r\n                                                )\r\n                                            ) {\r\n                                                return ItemCTHoanThanh(e)\r\n                                            }\r\n                                        }\r\n                                    })\r\n                                )\r\n                            }}\r\n                        />\r\n                        <SearchIcon className={classes.searchIcon} />\r\n                    </form>\r\n                </div>\r\n\r\n                <TableContainer\r\n                    style={{\r\n                        maxHeight: '75vh',\r\n                        width: '100%',\r\n                        backgroundColor: 'white',\r\n                    }}\r\n                >\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>STT</TableCell>\r\n                                <TableCell>Tên Công Trình</TableCell>\r\n                                <TableCell>Địa Điểm</TableCell>\r\n                                <TableCell>Ngày Hoàn Thành</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <TableBody>{UITableCongTrinhHT}</TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DSCongTrinhHoanThanh\r\n","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\MainActivity\\Chil_Screens\\TienDoCongTrinh\\TienDoCongTrinh.js",["163","164","165","166","167","168","169","170","171"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    useParams,\r\n    Link,\r\n    useRouteMatch,\r\n} from 'react-router-dom'\r\n\r\nimport ChiTietTienDoCongTrinh from './Child_Screen/ChiTietTienDoCongTrinh'\r\n\r\nimport { CircularProgressbar } from 'react-circular-progressbar'\r\nimport 'react-circular-progressbar/dist/styles.css'\r\n\r\n//import component React Bootstrap\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\n//import icon react material ui\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\n//Import react material-ui\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formSearch: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItem: 'center',\r\n        height: '100%',\r\n        padding: '0 20px',\r\n    },\r\n    searchContainer: {\r\n        border: '1px solid black',\r\n        height: '50px',\r\n        width: '100%',\r\n        borderRadius: '50px',\r\n    },\r\n    searchIcon: {\r\n        fontSize: '30px',\r\n        height: '100%',\r\n        cursor: 'pointer',\r\n        color: 'gray',\r\n    },\r\n    inputSearch: {\r\n        border: 'none',\r\n        outline: 'none',\r\n        height: '100%',\r\n        width: '100%',\r\n        fontSize: '15px',\r\n        fontWeight: '600',\r\n    },\r\n    iconLoad: {\r\n        position: 'absolute',\r\n        minHeight: '500px',\r\n        right: '0',\r\n        left: '0',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    notNetWok: {\r\n        position: 'absolute',\r\n        minHeight: '500px',\r\n        right: '0',\r\n        left: '0',\r\n        fontSize: '30px',\r\n        fontWeight: '600',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n}))\r\n\r\nfunction TienDoCongTrinh(props) {\r\n    const classes = useStyles()\r\n    const TOKEN = sessionStorage.getItem('token')\r\n    const data_info_person = JSON.parse(sessionStorage.getItem('info'))\r\n    const URL_API = 'https://qlnscloud.herokuapp.com/congtrinh2/'\r\n    const GET_CONGTRINH = 'ToanBoCongTrinh'\r\n\r\n    const [UITableTienDo, setUITableTienDo] = useState()\r\n    const [dataDSTD, setDataDSTD] = useState()\r\n    const [isNetWork, setIsNetWork] = useState(true)\r\n    const [loading, setloading] = useState(false)\r\n    const [loadDSTD, setLoadDSTD] = useState()\r\n\r\n    function checkNetWork() {\r\n        window.addEventListener('online', () => {\r\n            setIsNetWork(window.navigator.onLine)\r\n            console.log('online')\r\n            return\r\n        })\r\n\r\n        window.addEventListener('offline', () => {\r\n            setIsNetWork(window.navigator.onLine)\r\n            console.log('offline')\r\n            return\r\n        })\r\n    }\r\n\r\n    function getDanhSachCongTrinh() {\r\n        setloading(true)\r\n        if (window.fetch) {\r\n            fetch(URL_API + GET_CONGTRINH + '?token=' + TOKEN)\r\n                .then((response) => {\r\n                    return response.json()\r\n                })\r\n                .then((result) => {\r\n                    setloading(false)\r\n                    RenderUITableTienDoCT(result.data)\r\n                    setDataDSTD(result.data)\r\n                    setLoadDSTD(false)\r\n                })\r\n                .catch((error) => {\r\n                    setloading(false)\r\n                    console.error('Fetch to false', error)\r\n                })\r\n        } else {\r\n            console.log('Fetch not found')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDanhSachCongTrinh()\r\n        checkNetWork()\r\n    }, [loadDSTD])\r\n\r\n    function RenderUITableTienDoCT(data) {\r\n        setUITableTienDo(\r\n            data.map((e) => {\r\n                return ItemCT(e)\r\n            })\r\n        )\r\n    }\r\n\r\n    var stt = 0\r\n    function ItemCT(props) {\r\n        stt++\r\n        return (\r\n            <TableRow hover>\r\n                <TableCell>{stt}</TableCell>\r\n                <TableCell>{props.TenCT}</TableCell>\r\n                <TableCell>{props.DiaDiem}</TableCell>\r\n                <TableCell>{props.NgayCP}</TableCell>\r\n                <TableCell>{props.NgayKC}</TableCell>\r\n                <TableCell>{props.NgayHT}</TableCell>\r\n                <TableCell>\r\n                    <div\r\n                        style={{\r\n                            width: '55px',\r\n                        }}\r\n                    >\r\n                        <CircularProgressbar\r\n                            value={props.TienDo ? props.TienDo : 1}\r\n                            text={`${props.TienDo ? props.TienDo : 1}/100`}\r\n                        />\r\n                    </div>\r\n                </TableCell>\r\n                {data_info_person.TypeNV == 2 ? (\r\n                    <TableCell>\r\n                        <Link to=\"/Dashboard/TienDoCongTrinh/ChiTietTienDoCongTrinh\">\r\n                            <Button\r\n                                variant=\"danger\"\r\n                                style={{\r\n                                    width: '110px',\r\n                                    fontSize: '14px',\r\n                                }}\r\n                            >\r\n                                Xem Chi Tiết\r\n                            </Button>\r\n                        </Link>\r\n                        <Button\r\n                            variant=\"info\"\r\n                            style={{\r\n                                width: '110px',\r\n                                fontSize: '14px',\r\n                                marginLeft: '3px',\r\n                            }}\r\n                        >\r\n                            In\r\n                        </Button>\r\n                    </TableCell>\r\n                ) : (\r\n                    <div></div>\r\n                )}\r\n            </TableRow>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {}, [])\r\n\r\n    return (\r\n        <Container fluid>\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    margin: '20px 0',\r\n                }}\r\n            >\r\n                <h1\r\n                    style={{\r\n                        width: '100%',\r\n                        textAlign: 'center',\r\n                    }}\r\n                >\r\n                    Tiến Độ Công Trình\r\n                </h1>\r\n            </div>\r\n            <Paper style={{ width: '100%' }}>\r\n                {loading ? (\r\n                    <div className={classes.iconLoad}>\r\n                        <Spinner animation=\"border\" />\r\n                    </div>\r\n                ) : (\r\n                    <div></div>\r\n                )}\r\n                {isNetWork ? (\r\n                    <div>\r\n                        <div className={classes.searchContainer}>\r\n                            <form className={classes.formSearch}>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Tìm Kiếm Công Trình\"\r\n                                    className={classes.inputSearch}\r\n                                    onChange={(event) => {\r\n                                        const textSearch = event.target.value.toLowerCase()\r\n                                        const regex = new RegExp(textSearch)\r\n                                        setUITableTienDo(\r\n                                            dataDSTD.map((e) => {\r\n                                                if (\r\n                                                    regex.test(\r\n                                                        e.TenCT.toLowerCase()\r\n                                                    ) ||\r\n                                                    regex.test(\r\n                                                        e.DiaDiem.toLowerCase()\r\n                                                    )\r\n                                                ) {\r\n                                                    return ItemCT(e)\r\n                                                }\r\n                                            })\r\n                                        )\r\n                                    }}\r\n                                />\r\n                                <SearchIcon className={classes.searchIcon} />\r\n                            </form>\r\n                        </div>\r\n                        <TableContainer\r\n                            style={{\r\n                                maxHeight: '72vh',\r\n                                width: '100%',\r\n                            }}\r\n                        >\r\n                            <Table stickyHeader aria-label=\"sticky table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>STT</TableCell>\r\n                                        <TableCell>Tên Công Trình</TableCell>\r\n                                        <TableCell>Địa Điểm</TableCell>\r\n                                        <TableCell>Ngày Cấp Phép</TableCell>\r\n                                        <TableCell>Ngày Khởi Công</TableCell>\r\n                                        <TableCell>\r\n                                            Ngày Hoàn Thành Dự Kiến\r\n                                        </TableCell>\r\n                                        <TableCell>Tiến độ</TableCell>\r\n                                        <TableCell></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n\r\n                                <TableBody>{UITableTienDo}</TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </div>\r\n                ) : (\r\n                    <div className={classes.notNetWok}>\r\n                        Không có mạng, vui lòng thử lại\r\n                    </div>\r\n                )}\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TienDoCongTrinh\r\n","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\api\\pushNotify.js",[],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\serviceWorker.js",[],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\component\\TextForm\\TextForm.js",[],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\component\\ButtonForm\\ButtonForm.js",["172","173","174","175","176"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport './css/ButtonForm.css'\r\n\r\nimport { GET_INFO_NHANVIEN } from '../../reactRedux/ReduxAc'\r\n\r\n//import func valid\r\nimport {\r\n    validatedPhone,\r\n    validatedPassword,\r\n    validatedText,\r\n} from '../../regex/regexValidated'\r\n\r\nfunction ButtonForm(props) {\r\n    const URL_API = 'https://qlnscloud.herokuapp.com/account2/login'\r\n    const [disableButton, setDisableButton] = useState(false)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const [keyPress, setKeyPress] = useState()\r\n\r\n    const URL_UPDATE_NHANVIEN =\r\n        'https://qlnscloud.herokuapp.com/account2/CapNhatThongTin?token='\r\n\r\n    const URL_GETALL_NHANVIEN =\r\n        'https://qlnscloud.herokuapp.com/account2/allNhanVien?token='\r\n\r\n    const TOKEN = sessionStorage.getItem('token')\r\n    const data_info_person = JSON.parse(sessionStorage.getItem('info'))\r\n\r\n    function saveTokenToSessionStorage(token) {\r\n        //Check browser support\r\n        if (typeof Storage !== 'undefined') {\r\n            sessionStorage.setItem('token', token)\r\n        } else {\r\n            console.log('No Web Storage support')\r\n        }\r\n    }\r\n\r\n    function saveInfoPersonToSessionStorage(data) {\r\n        //Check browser support\r\n        if (typeof Storage !== 'undefined') {\r\n            sessionStorage.setItem('info', JSON.stringify(data))\r\n        } else {\r\n            console.log('No Web Storage support')\r\n        }\r\n    }\r\n\r\n    function login() {\r\n        setDisableButton(true)\r\n        props.loading(true)\r\n        if (window.fetch) {\r\n            fetch(URL_API, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    SDT: props.inputSDT,\r\n                    Pass: props.inputPass,\r\n                }),\r\n            })\r\n                .then((response) => {\r\n                    return response.json()\r\n                })\r\n                .then(async (result) => {\r\n                    if (result.success) {\r\n                        await saveTokenToSessionStorage(result.token)\r\n                        await saveInfoPersonToSessionStorage(result.data)\r\n                        await dispatch({\r\n                            type: GET_INFO_NHANVIEN,\r\n                            value: {\r\n                                imgDefaultStore: result.data.Avatar,\r\n                                nameDefaultStore: result.data.HoTen,\r\n                            },\r\n                        })\r\n                        history.push(props.link)\r\n                    } else {\r\n                        props.setIsLogin(false)\r\n                    }\r\n                    props.loading(false)\r\n                })\r\n                .catch((error) => {\r\n                    console.log('Lỗi', error)\r\n                    props.loading(false)\r\n                })\r\n\r\n            setDisableButton(false)\r\n        } else {\r\n            console.log('Fetch not found')\r\n        }\r\n    }\r\n\r\n    function changePassword() {\r\n        props.setLoading(true)\r\n\r\n        if (props.pass !== data_info_person.Pass) {\r\n            props.setShowMess(true)\r\n            props.setTextMess('Mật khẩu củ không đúng')\r\n            props.setLoading(false)\r\n            return\r\n        }\r\n\r\n        if (props.newPass !== props.newPassAgain) {\r\n            props.setShowMess(true)\r\n            props.setTextMess('Nhập lại mật khẩu không đúng')\r\n            props.setLoading(false)\r\n            return\r\n        }\r\n\r\n        if (window.fetch) {\r\n            const itemBody = {\r\n                MaNV: data_info_person.MaNV,\r\n                MaPB: data_info_person.MaPB,\r\n                MaCV: data_info_person.MaNV,\r\n                BaoHiem: data_info_person.BaoHiem,\r\n                LuongCoBan: data_info_person.LuongCoBan,\r\n                TypeNV: data_info_person.TypeNV,\r\n\r\n                Pass: props.newPass ? props.newPass : data_info_person.Pass,\r\n\r\n                SDT: data_info_person.SDT,\r\n                HoTen: data_info_person.HoTen,\r\n                Avatar: data_info_person.Avatar,\r\n                NgaySinh: data_info_person.NgaySinh,\r\n                GioiTinh: data_info_person.GioiTinh,\r\n                DiaChi: data_info_person.DiaChi,\r\n            }\r\n\r\n            fetch(URL_UPDATE_NHANVIEN + TOKEN, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(itemBody),\r\n            })\r\n                .then((response) => {\r\n                    return response.json()\r\n                })\r\n                .then((result) => {\r\n                    console.log(result)\r\n                    if (result.success) {\r\n                        sessionStorage.setItem(\r\n                            'info',\r\n                            JSON.stringify(result.data)\r\n                        )\r\n                        props.setLoading(false)\r\n                        history.push(props.link)\r\n                    } else {\r\n                        props.setShowMess(true)\r\n                        props.setTextMess('Đổi mật khẩu không thành công')\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    props.setLoading(false)\r\n                    console.log('Lỗi fech', error)\r\n                })\r\n        } else {\r\n            console.log('fetch not found')\r\n        }\r\n    }\r\n\r\n    function resetPass() {\r\n        console.log(props.sdtReset)\r\n        // props.setLoading(true)\r\n\r\n        if (window.fetch) {\r\n            fetch(URL_GETALL_NHANVIEN + TOKEN)\r\n                .then((response) => {\r\n                    return response.json()\r\n                })\r\n                .then((result) => {\r\n                    console.log(result)\r\n                    // if (result.success) {\r\n                    //     props.setLoading(false)\r\n                    //     history.push(props.link)\r\n                    // } else {\r\n                    //     props.setShowMess(true)\r\n                    //     props.setTextMess(result.mess)\r\n                    // }\r\n                })\r\n                .catch((error) => {\r\n                    props.setLoading(false)\r\n                    console.log('Lỗi fetch', error)\r\n                })\r\n        } else {\r\n            console.log('fetch not found')\r\n        }\r\n    }\r\n\r\n    function handleClickSubmit() {\r\n        switch (props.feature) {\r\n            case 'login': {\r\n                if (\r\n                    validatedPhone(props.inputSDT) &&\r\n                    validatedPassword(props.inputPass)\r\n                ) {\r\n                    login()\r\n                    return\r\n                }\r\n                break\r\n            }\r\n\r\n            case 'changePassword': {\r\n                if (\r\n                    validatedText(props.pass, 'mật khẩu') ||\r\n                    validatedText(props.newPass, 'mật khẩu mới') ||\r\n                    validatedText(props.newPassAgain, 'xác nhận mật khẩu mới')\r\n                ) {\r\n                    changePassword()\r\n                    return\r\n                }\r\n                break\r\n            }\r\n\r\n            // case 'ResetPass': {\r\n            //     // resetPass()\r\n            //     history.push(props.link)\r\n            //     return\r\n            // }\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            className=\"btn-click\"\r\n            id=\"submit-click\"\r\n            disabled={disableButton}\r\n            onClick={(e) => {\r\n                handleClickSubmit()\r\n            }}\r\n        >\r\n            {props.btnText}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ButtonForm\r\n","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\component\\SectionDashboard\\SectionDashboard.js",["177","178","179","180","181"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { lengthDSNV } from '../../activity/MainActivity/Chil_Screens/DanhSachNhanVien'\r\nimport { lengthDSCT } from '../../activity/MainActivity/Chil_Screens/DanhSachCongTrinh'\r\n\r\nimport ModalWL from '../Modal/ModalWL'\r\n\r\n//dark mode\r\nimport { lightTheme, darkTheme } from '../../Theme/theme'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\n//import icon react material ui\r\nimport EventIcon from '@material-ui/icons/Event'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\nimport ListIcon from '@material-ui/icons/List'\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge'\r\nimport DateRangeIcon from '@material-ui/icons/DateRange'\r\nimport AssignmentIcon from '@material-ui/icons/Assignment'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined'\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline'\r\n\r\n//import component react material ui\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\n//import component react bootstrap\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nfunction Section() {\r\n    const isDarkMode = useSelector((state) => state.isDarkMode)\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        title: {\r\n            width: '100%',\r\n            height: '40px',\r\n            fontWeight: '600',\r\n            fontSize: '22px',\r\n            color: isDarkMode ? 'gray' : darkTheme.text,\r\n            padding: '0 10px',\r\n            borderBottom: '1px solid #eee',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n        },\r\n        detailSinhVienContainer: {\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            backgroundColor: isDarkMode ? 'white' : darkTheme.body,\r\n        },\r\n        imgSinhVien: {\r\n            height: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n        detail: {\r\n            display: 'flex',\r\n            width: '100%',\r\n            justifyContent: 'space-around',\r\n            alignItems: 'center',\r\n        },\r\n        detailSinhVienLeft: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'flex-start',\r\n        },\r\n        detailSinhVienRight: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'flex-start',\r\n        },\r\n        diemDanh: {\r\n            width: '50px',\r\n            height: '50px',\r\n            border: '1px solid gray',\r\n            boxShadow: '0px 0px 4px',\r\n            borderRadius: '50%',\r\n            cursor: 'pointer',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            fontSize: '30px',\r\n            alignItems: 'center',\r\n            transition: 'all .2s linear',\r\n            flex: '0 0 50px',\r\n            marginLeft: '50px',\r\n\r\n            '&:hover': {\r\n                color: '#007bff !important',\r\n            },\r\n        },\r\n        tutorial: {\r\n            position: 'absolute',\r\n            top: '100px',\r\n            right: '100px',\r\n            cursor: 'pointer',\r\n            color: 'gray',\r\n\r\n            '&:hover': {\r\n                color: '#33aef5',\r\n            },\r\n        },\r\n        DonutLargeIcon: {\r\n            fontSize: '40px',\r\n            color: '#337ab7',\r\n            marginBottom: '12px',\r\n        },\r\n        itemFeature: {\r\n            color: isDarkMode ? 'gray' : darkTheme.text,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            width: '100%',\r\n            lineHeight: '16px',\r\n            height: '100%',\r\n            transition: 'all 0.2s linear',\r\n            // '&:hover': {\r\n            //     boxShadow: '0 0 5px 2px',\r\n            // },\r\n        },\r\n        modalThongBaoBody: {\r\n            height: '500px',\r\n            overflowY: 'scroll',\r\n        },\r\n    }))\r\n\r\n    const classes = useStyles()\r\n\r\n    const TOKEN = sessionStorage.getItem('token')\r\n\r\n    const URP_API_GET_NOTIFYCATION =\r\n        'https://qlnscloud.herokuapp.com/notifycation/DanhSachThongBao?token='\r\n\r\n    const data_info_person = JSON.parse(sessionStorage.getItem('info'))\r\n\r\n    const [UIThongBao, setUIThongBao] = useState()\r\n    const [showTutorial, setShowTutorial] = useState(false)\r\n\r\n    const [modalShowThongBao, setModalShowThongBao] = useState(false)\r\n\r\n    const [lengthTB, setLengthTB] = useState()\r\n\r\n    const NGAY = [\r\n        1,\r\n        2,\r\n        3,\r\n        4,\r\n        5,\r\n        6,\r\n        7,\r\n        8,\r\n        9,\r\n        10,\r\n        11,\r\n        12,\r\n        13,\r\n        14,\r\n        15,\r\n        16,\r\n        17,\r\n        18,\r\n        19,\r\n        20,\r\n        21,\r\n        22,\r\n        23,\r\n        24,\r\n        25,\r\n        26,\r\n        27,\r\n        28,\r\n        29,\r\n        30,\r\n        31,\r\n    ]\r\n\r\n    var srcImg = [\r\n        require('../../resource/HinhAnh/2.jpg'),\r\n        require('../../resource/HinhAnh/3.jpg'),\r\n        require('../../resource/HinhAnh/4.jpg'),\r\n        require('../../resource/HinhAnh/5.jpg'),\r\n        require('../../resource/HinhAnh/6.jpg'),\r\n        require('../../resource/HinhAnh/7.jpg'),\r\n    ]\r\n\r\n    function getNotify() {\r\n        if (window.fetch) {\r\n            fetch(URP_API_GET_NOTIFYCATION + TOKEN)\r\n                .then((response) => {\r\n                    return response.json()\r\n                })\r\n                .then((result) => {\r\n                    setLengthTB(result.data.length)\r\n                    RenderUIThongBao(result.data)\r\n                    // console.log(result.data)\r\n                })\r\n                .catch((error) => {\r\n                    console.log('Lỗi', error)\r\n                })\r\n        } else {\r\n            console.log('fetch not found')\r\n        }\r\n    }\r\n\r\n    function RenderUIThongBao(data) {\r\n        var bgItemTB = true\r\n        setUIThongBao(\r\n            data.map((e) => {\r\n                bgItemTB = !bgItemTB\r\n                return ItemThongBao(e, bgItemTB)\r\n            })\r\n        )\r\n    }\r\n\r\n    function ItemThongBao(props, bgItem) {\r\n        return (\r\n            <div\r\n                style={{\r\n                    backgroundColor: bgItem ? '#e4e6eb' : 'white',\r\n                    height: '50px',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    flexWrap: 'wrap',\r\n                    borderRadius: '5px',\r\n                    fontSize: '18px',\r\n                }}\r\n            >\r\n                <p\r\n                    style={{\r\n                        marginBottom: '0',\r\n                    }}\r\n                >\r\n                    {props.NoiDung} vào lúc\r\n                </p>\r\n                <span style={{ color: 'red' }}>\r\n                    {props.TimeAt}, {props.DateAdding}\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotify()\r\n    }, [])\r\n\r\n    function ViewDS(props) {\r\n        return (\r\n            <Paper\r\n                style={{\r\n                    padding: '15px',\r\n                    backgroundColor: `${props.bgColor}`,\r\n                }}\r\n            >\r\n                <p\r\n                    style={{\r\n                        fontSize: '13px',\r\n                        color: isDarkMode ? 'black' : darkTheme.text,\r\n                    }}\r\n                >\r\n                    {props.title}\r\n                </p>\r\n                <span\r\n                    style={{\r\n                        fontSize: '25px',\r\n                        paddingBottom: '10px',\r\n                        color: 'gray',\r\n                        fontWeight: '600',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'space-between',\r\n                    }}\r\n                >\r\n                    {props.sl}\r\n                    {props.icon}\r\n                </span>\r\n                <Link\r\n                    to={props.link}\r\n                    style={{\r\n                        textDecoration: 'none',\r\n                    }}\r\n                    onClick={props.onClick}\r\n                >\r\n                    Xem\r\n                </Link>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n    function ModalThongBao() {\r\n        return (\r\n            <Modal\r\n                show={modalShowThongBao}\r\n                onHide={() => setModalShowThongBao(false)}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                style={{ color: 'black' }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <h5>Thông Báo</h5>\r\n                </Modal.Header>\r\n                <Modal.Body className={classes.modalThongBaoBody}>\r\n                    {UIThongBao}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        onClick={() => {\r\n                            setModalShowThongBao(false)\r\n                        }}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    function ItemDiemDanh(props) {\r\n        const [checkedDiemDanh, setCheckedDiemDanh] = useState(false)\r\n        // console.log(checkedDiemDanh)\r\n        return (\r\n            <label\r\n                for={props.date}\r\n                className={classes.diemDanh}\r\n                style={{\r\n                    backgroundColor: checkedDiemDanh\r\n                        ? 'rgb(51, 122, 183)'\r\n                        : 'white',\r\n                    color: checkedDiemDanh ? 'white' : 'black',\r\n                }}\r\n            >\r\n                {props.date}\r\n                <input\r\n                    id={props.date}\r\n                    type=\"checkbox\"\r\n                    value={props.date}\r\n                    onChange={(e) => {\r\n                        setCheckedDiemDanh(!checkedDiemDanh)\r\n                    }}\r\n                    checked={checkedDiemDanh}\r\n                    hidden\r\n                />\r\n            </label>\r\n        )\r\n    }\r\n\r\n    function Viewother(props) {\r\n        return (\r\n            <Paper\r\n                style={{\r\n                    height: '110px',\r\n                    backgroundColor: isDarkMode ? 'white' : darkTheme.body,\r\n                }}\r\n            >\r\n                <Link\r\n                    to={props.link}\r\n                    style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        textDecoration: 'none',\r\n                        fontSize: '16px',\r\n                    }}\r\n                >\r\n                    <div className={classes.itemFeature}>\r\n                        {props.Icon}\r\n                        {props.txtView}\r\n                    </div>\r\n                </Link>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n    function ItemThongTinNV(props) {\r\n        return (\r\n            <label\r\n                style={{\r\n                    fontSize: '15px',\r\n                    fontWeight: '600',\r\n                    color: '#667580',\r\n                    margin: '12px 0',\r\n                }}\r\n            >\r\n                {props.dataName}\r\n                <span\r\n                    style={{\r\n                        fontWeight: '600',\r\n                        fontSize: '15px',\r\n                        color: isDarkMode ? lightTheme.text : darkTheme.text,\r\n                    }}\r\n                >\r\n                    {props.data}\r\n                </span>\r\n            </label>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            fluid=\"md\"\r\n            style={{\r\n                marginTop: '13px',\r\n            }}\r\n        >\r\n            <ModalThongBao />\r\n\r\n            <Row style={{ height: '300px' }}>\r\n                <Col\r\n                    md={7}\r\n                    style={{\r\n                        height: '100%',\r\n                    }}\r\n                >\r\n                    <Paper className={classes.detailSinhVienContainer}>\r\n                        <div className={classes.title}>Thông tin cá nhân</div>\r\n                        <Row\r\n                            style={{\r\n                                height: ' 100%',\r\n                            }}\r\n                        >\r\n                            <Col\r\n                                md={4}\r\n                                xl={4}\r\n                                lg={4}\r\n                                className={classes.imgSinhVien}\r\n                            >\r\n                                <img\r\n                                    src={data_info_person.Avatar}\r\n                                    style={{\r\n                                        width: '100px',\r\n                                        height: '100px',\r\n                                        borderRadius: '50%',\r\n                                        marginBottom: '7px',\r\n                                        objectFit: 'cover',\r\n                                        backgroundColor: 'white',\r\n                                    }}\r\n                                />\r\n                                <Link\r\n                                    to=\"/Dashboard/ChiTietNhanVien\"\r\n                                    style={{\r\n                                        textDecoration: 'none',\r\n                                        fontSize: '14px',\r\n                                    }}\r\n                                >\r\n                                    Xem chi tiết\r\n                                </Link>\r\n                            </Col>\r\n                            <Col\r\n                                md={8}\r\n                                xl={8}\r\n                                lg={8}\r\n                                className={classes.detail}\r\n                            >\r\n                                <div className={classes.detailSinhVienLeft}>\r\n                                    <ItemThongTinNV\r\n                                        dataName=\"Họ Tên: \"\r\n                                        data={data_info_person.HoTen}\r\n                                    />\r\n                                    <ItemThongTinNV\r\n                                        dataName=\"Mã Số: \"\r\n                                        data={data_info_person.MaNV}\r\n                                    />\r\n                                    <ItemThongTinNV\r\n                                        dataName=\"Mã Phòng Ban: \"\r\n                                        data={data_info_person.MaPB}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.detailSinhVienRight}>\r\n                                    <ItemThongTinNV\r\n                                        dataName=\"Mã Chức Vụ: \"\r\n                                        data={data_info_person.MaCV}\r\n                                    />\r\n                                    <ItemThongTinNV\r\n                                        dataName=\"Giới Tính: \"\r\n                                        data={data_info_person.GioiTinh}\r\n                                    />\r\n                                    <ItemThongTinNV\r\n                                        dataName=\"Ngày Sinh: \"\r\n                                        data={data_info_person.NgaySinh}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Paper>\r\n                </Col>\r\n\r\n                <Col\r\n                    md={5}\r\n                    style={{\r\n                        height: '100%',\r\n                    }}\r\n                >\r\n                    <Row\r\n                        style={{\r\n                            height: '100%',\r\n                        }}\r\n                    >\r\n                        <Col\r\n                            md={12}\r\n                            style={{\r\n                                marginBottom: '25px',\r\n                            }}\r\n                        >\r\n                            <ViewDS\r\n                                title=\"Thông Báo\"\r\n                                sl={lengthTB ? lengthTB : '0'}\r\n                                bgColor={isDarkMode ? 'white' : darkTheme.body}\r\n                                onClick={() => {\r\n                                    setModalShowThongBao(true)\r\n                                    console.log('Show thong bao')\r\n                                }}\r\n                                icon={\r\n                                    <NotificationsIcon\r\n                                        style={{ fontSize: '30px' }}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Col>\r\n\r\n                        <Col md={6}>\r\n                            <ViewDS\r\n                                title=\"Xem Danh Sách Nhân Viên\"\r\n                                sl={lengthDSNV ? lengthDSNV : '0'}\r\n                                bgColor={\r\n                                    isDarkMode ? '#e0fbff' : darkTheme.body\r\n                                }\r\n                                link=\"/Dashboard/DanhSachNhanVien\"\r\n                                icon={<ListIcon style={{ fontSize: '30px' }} />}\r\n                            />\r\n                        </Col>\r\n\r\n                        <Col md={6}>\r\n                            <ViewDS\r\n                                title=\"Xem Danh Sách Công Trình\"\r\n                                sl={lengthDSCT ? lengthDSCT : '0'}\r\n                                bgColor={\r\n                                    isDarkMode ? '#fff2d4' : darkTheme.body\r\n                                }\r\n                                link=\"/Dashboard/DanhSachCongTrinh\"\r\n                                icon={<ListIcon style={{ fontSize: '30px' }} />}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row\r\n                style={{\r\n                    marginTop: '20px',\r\n                }}\r\n            >\r\n                <Col md={3}>\r\n                    <Viewother\r\n                        txtView=\"Báo cáo tiến độ công trình\"\r\n                        link=\"/Dashboard/TienDoCongTrinh\"\r\n                        Icon={\r\n                            <DonutLargeIcon\r\n                                className={classes.DonutLargeIcon}\r\n                            />\r\n                        }\r\n                    />\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Viewother\r\n                        txtView=\"Phân Công Nhân Viên\"\r\n                        link=\"/Dashboard/PhanCongNhanVien\"\r\n                        Icon={\r\n                            <DateRangeIcon className={classes.DonutLargeIcon} />\r\n                        }\r\n                    />\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Viewother\r\n                        txtView=\"Bảng Lương\"\r\n                        link=\"/Dashboard/BangLuong\"\r\n                        Icon={\r\n                            <MonetizationOnOutlinedIcon\r\n                                className={classes.DonutLargeIcon}\r\n                            />\r\n                        }\r\n                    />\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Viewother\r\n                        txtView=\"Danh sách công trình hoàn thành\"\r\n                        link=\"/Dashboard/DSHoanThanhCongTrinh\"\r\n                        Icon={\r\n                            <CheckCircleOutlineIcon\r\n                                className={classes.DonutLargeIcon}\r\n                            />\r\n                        }\r\n                    />\r\n                </Col>\r\n                {/* <Col md={2}>\r\n                    <Viewother\r\n                        txtView=\"Đang tiến hành\"\r\n                        Icon={\r\n                            <AssignmentIcon\r\n                                className={classes.DonutLargeIcon}\r\n\r\n                            />\r\n                        }\r\n                    />\r\n                </Col> */}\r\n                {/* <Col md={2}>\r\n                    <Viewother\r\n                        txtView=\"Đang tiến hành\"\r\n                        Icon={\r\n                            <DonutLargeIcon\r\n                                className={classes.DonutLargeIcon}\r\n                            />\r\n                        }\r\n                    />\r\n                </Col> */}\r\n            </Row>\r\n            {data_info_person.TypeNV == 1 ? (\r\n                <div\r\n                    style={{\r\n                        width: '100%',\r\n                        marginTop: '30px',\r\n                    }}\r\n                >\r\n                    <h3\r\n                        style={{\r\n                            textAlign: 'center',\r\n                        }}\r\n                    >\r\n                        Điểm danh ngày\r\n                    </h3>\r\n                    <div\r\n                        style={{\r\n                            width: '100%',\r\n                            height: '100px',\r\n                            display: 'flex',\r\n                            justifyItems: 'center',\r\n                            alignItems: 'center',\r\n                            overflowX: 'scroll',\r\n                        }}\r\n                    >\r\n                        {NGAY.map((e) => {\r\n                            return <ItemDiemDanh date={e} />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div></div>\r\n            )}\r\n            <HelpOutlineIcon\r\n                className={classes.tutorial}\r\n                onClick={() => {\r\n                    setShowTutorial(true)\r\n                }}\r\n                style={{\r\n                    cursor: 'pointer',\r\n                    marginRight: '35px',\r\n                    fontSize: '30px',\r\n                }}\r\n            />\r\n            <ModalWL\r\n                show={showTutorial}\r\n                setShow={setShowTutorial}\r\n                header={'Hướng dẫn sử dụng'}\r\n                srcImg={srcImg}\r\n                heightImg=\"500px\"\r\n                widthImg=\"100%\"\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Section\r\n","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\MainActivity\\Chil_Screens\\DanhSachNhanVien.js",["182","183","184","185","186","187"],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\index.js",[],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\Route\\router.js",["188"],"import React from 'react'\r\n\r\n//import BrowserRouter as Router when run reactjs\r\n//import HashRouter as Router when run electron\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\n// import components\r\nimport DangNhap from '../DangNhap/DangNhap'\r\nimport ForgotPassword from '../QuenMatKhau/QuenMatKhau'\r\nimport ResetPassword from '../LayLaiMatKhau/LayLaiMatKhau'\r\nimport ChangePassword from '../DoiMatKhau/DoiMatKhau'\r\nimport Dashboard from '../MainActivity/MainActivity'\r\n\r\nfunction RouterApp() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={DangNhap} />\r\n                <Route path=\"/ForgotPassword\" component={ForgotPassword} />\r\n                <Route path=\"/ChangePassword\" component={ChangePassword} />\r\n                <Route path=\"/ResetPassword\" component={ResetPassword} />\r\n                <Route path=\"/Dashboard\" component={Dashboard} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default RouterApp\r\n","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\regex\\regexValidated.js",["189"],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\reactRedux\\ReduxRe.js",[],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\DangNhap\\DangNhap.js",["190","191","192","193","194","195"],"import React, { useState, useEffect } from 'react'\r\nimport '../FormStyle/css/FormStyle.css'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\r\n\r\n//import components react bootstrap\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\n// import components\r\nimport TitleForm from '../../component/TitleForm/TitleForm'\r\nimport InputText from '../../component/InputText/InputText'\r\nimport ButtonForm from '../../component/ButtonForm/ButtonForm'\r\nimport TextForm from '../../component/TextForm/TextForm'\r\nimport ModalWL from '../../component/Modal/ModalWL'\r\n\r\nvar srcImg = [\r\n    require('../../resource/HinhAnh/huongDan.jpg'),\r\n    // require('../../resource/HinhAnh/huongDan.jpg'),\r\n]\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tutorial: {\r\n        width: '100%',\r\n        cursor: 'pointer',\r\n        color: 'gray',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: '180px',\r\n        color: '#04c3c3',\r\n\r\n        '&:hover': {\r\n            color: '#33aef5',\r\n        },\r\n    },\r\n}))\r\n\r\nfunction Login() {\r\n    const styleFlex = {\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-end',\r\n        paddingTop: 0,\r\n    }\r\n\r\n    const [inputContentText, setInputContentNumber] = useState()\r\n    const [inputContentPassword, setInputContentPassword] = useState()\r\n    const [showMessLogin, setShowMessLogin] = useState(true)\r\n    const [loading, setLoading] = useState(false)\r\n    const [show, setShow] = useState(false)\r\n\r\n    const classes = useStyles()\r\n\r\n    useEffect(() => {\r\n        // Nếu đăng nhập rồi không cho quay lại trang login\r\n        if (sessionStorage.getItem('info')) {\r\n            var host = window.location.href\r\n            window.location.href = host.concat('Dashboard')\r\n            return\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {loading ? (\r\n                <div\r\n                    style={{\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        zIndex: '30',\r\n                        position: 'absolute',\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Spinner animation=\"border\" role=\"status\" />\r\n                </div>\r\n            ) : (\r\n                <div></div>\r\n            )}\r\n            <div className=\"form\">\r\n                <TitleForm title=\"QUẢN LÍ LAO ĐỘNG\" />\r\n                {showMessLogin ? (\r\n                    <div></div>\r\n                ) : (\r\n                    <Alert\r\n                        variant=\"danger\"\r\n                        onClose={() => setShowMessLogin(true)}\r\n                        dismissible\r\n                    >\r\n                        Sai Tài Khoản Hoặc Mật Khẩu, Vui Lòng Nhập Lại!\r\n                    </Alert>\r\n                )}\r\n                <form className=\"form-content\">\r\n                    <InputText\r\n                        type=\"number\"\r\n                        placeholder=\"Số điện thoại\"\r\n                        setInputContent={setInputContentNumber}\r\n                    />\r\n                    <InputText\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        setInputContent={setInputContentPassword}\r\n                    />\r\n                    <TextForm\r\n                        text=\"Forgot\"\r\n                        text_link=\"Username / Password?\"\r\n                        style={styleFlex}\r\n                        link=\"/ForgotPassword\"\r\n                    />\r\n                    <ButtonForm\r\n                        btnText=\"Đăng Nhập\"\r\n                        link=\"/Dashboard\"\r\n                        feature=\"login\"\r\n                        loading={setLoading}\r\n                        setIsLogin={setShowMessLogin}\r\n                        inputSDT={inputContentText}\r\n                        inputPass={inputContentPassword}\r\n                    />\r\n                </form>\r\n                <div className={classes.tutorial}>\r\n                    <p\r\n                        onClick={() => {\r\n                            setShow(true)\r\n                        }}\r\n                    >\r\n                        Hướng dẫn sử dụng\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <ModalWL\r\n                show={show}\r\n                setShow={setShow}\r\n                header={'Hướng dẫn sử dụng'}\r\n                srcImg={srcImg}\r\n                heightImg=\"450px\"\r\n                widthImg=\"100%\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\LayLaiMatKhau\\LayLaiMatKhau.js",[],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\MainActivity\\MainActivity.js",["196","197","198","199","200","201","202"],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\DoiMatKhau\\DoiMatKhau.js",["203","204","205"],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\MainActivity\\Chil_Screens\\DanhSachCongTrinh.js",["206","207","208","209","210","211","212"],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\MainActivity\\Chil_Screens\\BangLuong.js",["213","214","215"],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\activity\\MainActivity\\Chil_Screens\\ChiTietNhanVien.js",["216","217","218","219","220","221","222","223"],"C:\\Users\\MINH HOANG\\Desktop\\QLNS\\do-an-QLNS\\src\\component\\HeaderDashboard\\HeaderDashboard.js",["224","225","226"],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"227","replacedBy":"231"},{"ruleId":"229","replacedBy":"232"},{"ruleId":"227","replacedBy":"233"},{"ruleId":"229","replacedBy":"234"},{"ruleId":"227","replacedBy":"235"},{"ruleId":"229","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":6,"column":11,"nodeType":"239","messageId":"240","endLine":6,"endColumn":21},{"ruleId":"241","severity":1,"message":"242","line":11,"column":24,"nodeType":"243","messageId":"244","endLine":11,"endColumn":26},{"ruleId":"245","severity":1,"message":"246","line":12,"column":34,"nodeType":"247","messageId":"248","endLine":12,"endColumn":36},{"ruleId":"249","severity":1,"message":"250","line":32,"column":8,"nodeType":"251","endLine":32,"endColumn":10,"suggestions":"252"},{"ruleId":"237","severity":1,"message":"253","line":8,"column":5,"nodeType":"239","messageId":"240","endLine":8,"endColumn":19},{"ruleId":"237","severity":1,"message":"254","line":9,"column":5,"nodeType":"239","messageId":"240","endLine":9,"endColumn":22},{"ruleId":"237","severity":1,"message":"255","line":35,"column":8,"nodeType":"239","messageId":"240","endLine":35,"endColumn":14},{"ruleId":"237","severity":1,"message":"256","line":36,"column":8,"nodeType":"239","messageId":"240","endLine":36,"endColumn":11},{"ruleId":"237","severity":1,"message":"257","line":106,"column":12,"nodeType":"239","messageId":"240","endLine":106,"endColumn":23},{"ruleId":"237","severity":1,"message":"258","line":106,"column":25,"nodeType":"239","messageId":"240","endLine":106,"endColumn":39},{"ruleId":"249","severity":1,"message":"259","line":170,"column":8,"nodeType":"251","endLine":170,"endColumn":18,"suggestions":"260"},{"ruleId":"241","severity":1,"message":"261","line":201,"column":41,"nodeType":"243","messageId":"244","endLine":201,"endColumn":43},{"ruleId":"237","severity":1,"message":"262","line":246,"column":14,"nodeType":"239","messageId":"240","endLine":246,"endColumn":41},{"ruleId":"237","severity":1,"message":"263","line":328,"column":14,"nodeType":"239","messageId":"240","endLine":328,"endColumn":36},{"ruleId":"237","severity":1,"message":"264","line":444,"column":16,"nodeType":"239","messageId":"240","endLine":444,"endColumn":20},{"ruleId":"237","severity":1,"message":"265","line":444,"column":22,"nodeType":"239","messageId":"240","endLine":444,"endColumn":29},{"ruleId":"237","severity":1,"message":"266","line":445,"column":16,"nodeType":"239","messageId":"240","endLine":445,"endColumn":26},{"ruleId":"237","severity":1,"message":"267","line":445,"column":28,"nodeType":"239","messageId":"240","endLine":445,"endColumn":41},{"ruleId":"237","severity":1,"message":"268","line":446,"column":16,"nodeType":"239","messageId":"240","endLine":446,"endColumn":27},{"ruleId":"237","severity":1,"message":"269","line":446,"column":29,"nodeType":"239","messageId":"240","endLine":446,"endColumn":43},{"ruleId":"237","severity":1,"message":"270","line":447,"column":16,"nodeType":"239","messageId":"240","endLine":447,"endColumn":23},{"ruleId":"237","severity":1,"message":"271","line":447,"column":25,"nodeType":"239","messageId":"240","endLine":447,"endColumn":35},{"ruleId":"237","severity":1,"message":"272","line":448,"column":16,"nodeType":"239","messageId":"240","endLine":448,"endColumn":24},{"ruleId":"237","severity":1,"message":"273","line":448,"column":26,"nodeType":"239","messageId":"240","endLine":448,"endColumn":37},{"ruleId":"237","severity":1,"message":"274","line":450,"column":16,"nodeType":"239","messageId":"240","endLine":450,"endColumn":23},{"ruleId":"237","severity":1,"message":"275","line":450,"column":25,"nodeType":"239","messageId":"240","endLine":450,"endColumn":35},{"ruleId":"245","severity":1,"message":"276","line":721,"column":65,"nodeType":"247","messageId":"277","endLine":721,"endColumn":67},{"ruleId":"237","severity":1,"message":"278","line":5,"column":8,"nodeType":"239","messageId":"240","endLine":5,"endColumn":14},{"ruleId":"249","severity":1,"message":"279","line":95,"column":8,"nodeType":"251","endLine":95,"endColumn":10,"suggestions":"280"},{"ruleId":"245","severity":1,"message":"276","line":99,"column":26,"nodeType":"247","messageId":"277","endLine":99,"endColumn":28},{"ruleId":"241","severity":1,"message":"261","line":100,"column":30,"nodeType":"243","messageId":"244","endLine":100,"endColumn":32},{"ruleId":"245","severity":1,"message":"276","line":106,"column":26,"nodeType":"247","messageId":"277","endLine":106,"endColumn":28},{"ruleId":"241","severity":1,"message":"261","line":107,"column":30,"nodeType":"243","messageId":"244","endLine":107,"endColumn":32},{"ruleId":"245","severity":1,"message":"276","line":162,"column":56,"nodeType":"247","messageId":"277","endLine":162,"endColumn":58},{"ruleId":"237","severity":1,"message":"281","line":3,"column":19,"nodeType":"239","messageId":"240","endLine":3,"endColumn":25},{"ruleId":"237","severity":1,"message":"282","line":4,"column":5,"nodeType":"239","messageId":"240","endLine":4,"endColumn":11},{"ruleId":"237","severity":1,"message":"283","line":5,"column":5,"nodeType":"239","messageId":"240","endLine":5,"endColumn":10},{"ruleId":"237","severity":1,"message":"284","line":6,"column":5,"nodeType":"239","messageId":"240","endLine":6,"endColumn":14},{"ruleId":"237","severity":1,"message":"285","line":8,"column":5,"nodeType":"239","messageId":"240","endLine":8,"endColumn":18},{"ruleId":"237","severity":1,"message":"286","line":11,"column":8,"nodeType":"239","messageId":"240","endLine":11,"endColumn":30},{"ruleId":"249","severity":1,"message":"287","line":136,"column":8,"nodeType":"251","endLine":136,"endColumn":18,"suggestions":"288"},{"ruleId":"241","severity":1,"message":"261","line":169,"column":42,"nodeType":"243","messageId":"244","endLine":169,"endColumn":44},{"ruleId":"245","severity":1,"message":"276","line":239,"column":62,"nodeType":"247","messageId":"277","endLine":239,"endColumn":64},{"ruleId":"237","severity":1,"message":"289","line":1,"column":27,"nodeType":"239","messageId":"240","endLine":1,"endColumn":36},{"ruleId":"237","severity":1,"message":"290","line":2,"column":10,"nodeType":"239","messageId":"240","endLine":2,"endColumn":14},{"ruleId":"237","severity":1,"message":"291","line":21,"column":12,"nodeType":"239","messageId":"240","endLine":21,"endColumn":20},{"ruleId":"237","severity":1,"message":"292","line":21,"column":22,"nodeType":"239","messageId":"240","endLine":21,"endColumn":33},{"ruleId":"237","severity":1,"message":"293","line":164,"column":14,"nodeType":"239","messageId":"240","endLine":164,"endColumn":23},{"ruleId":"237","severity":1,"message":"294","line":15,"column":8,"nodeType":"239","messageId":"240","endLine":15,"endColumn":17},{"ruleId":"237","severity":1,"message":"295","line":20,"column":8,"nodeType":"239","messageId":"240","endLine":20,"endColumn":22},{"ruleId":"249","severity":1,"message":"296","line":257,"column":8,"nodeType":"251","endLine":257,"endColumn":10,"suggestions":"297"},{"ruleId":"298","severity":1,"message":"299","line":439,"column":33,"nodeType":"300","endLine":449,"endColumn":35},{"ruleId":"241","severity":1,"message":"261","line":628,"column":38,"nodeType":"243","messageId":"244","endLine":628,"endColumn":40},{"ruleId":"237","severity":1,"message":"301","line":1,"column":38,"nodeType":"239","messageId":"240","endLine":1,"endColumn":44},{"ruleId":"237","severity":1,"message":"302","line":133,"column":9,"nodeType":"239","messageId":"240","endLine":133,"endColumn":16},{"ruleId":"249","severity":1,"message":"303","line":175,"column":8,"nodeType":"251","endLine":175,"endColumn":18,"suggestions":"304"},{"ruleId":"241","severity":1,"message":"261","line":187,"column":42,"nodeType":"243","messageId":"244","endLine":187,"endColumn":44},{"ruleId":"241","severity":1,"message":"261","line":655,"column":42,"nodeType":"243","messageId":"244","endLine":655,"endColumn":44},{"ruleId":"245","severity":1,"message":"276","line":697,"column":62,"nodeType":"247","messageId":"277","endLine":697,"endColumn":64},{"ruleId":"237","severity":1,"message":"305","line":6,"column":10,"nodeType":"239","messageId":"240","endLine":6,"endColumn":21},{"ruleId":"241","severity":1,"message":"261","line":5,"column":42,"nodeType":"243","messageId":"244","endLine":5,"endColumn":44},{"ruleId":"237","severity":1,"message":"281","line":3,"column":27,"nodeType":"239","messageId":"240","endLine":3,"endColumn":33},{"ruleId":"237","severity":1,"message":"282","line":3,"column":35,"nodeType":"239","messageId":"240","endLine":3,"endColumn":41},{"ruleId":"237","severity":1,"message":"283","line":3,"column":43,"nodeType":"239","messageId":"240","endLine":3,"endColumn":48},{"ruleId":"237","severity":1,"message":"290","line":3,"column":50,"nodeType":"239","messageId":"240","endLine":3,"endColumn":54},{"ruleId":"237","severity":1,"message":"306","line":9,"column":8,"nodeType":"239","messageId":"240","endLine":9,"endColumn":23},{"ruleId":"307","severity":1,"message":"308","line":33,"column":9,"nodeType":"309","messageId":"244","endLine":33,"endColumn":14},{"ruleId":"237","severity":1,"message":"310","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":25},{"ruleId":"237","severity":1,"message":"311","line":10,"column":10,"nodeType":"239","messageId":"240","endLine":10,"endColumn":25},{"ruleId":"237","severity":1,"message":"312","line":31,"column":8,"nodeType":"239","messageId":"240","endLine":31,"endColumn":23},{"ruleId":"237","severity":1,"message":"313","line":32,"column":8,"nodeType":"239","messageId":"240","endLine":32,"endColumn":19},{"ruleId":"237","severity":1,"message":"302","line":59,"column":11,"nodeType":"239","messageId":"240","endLine":59,"endColumn":18},{"ruleId":"237","severity":1,"message":"314","line":62,"column":11,"nodeType":"239","messageId":"240","endLine":62,"endColumn":19},{"ruleId":"237","severity":1,"message":"315","line":64,"column":11,"nodeType":"239","messageId":"240","endLine":64,"endColumn":18},{"ruleId":"237","severity":1,"message":"301","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":23},{"ruleId":"237","severity":1,"message":"316","line":7,"column":8,"nodeType":"239","messageId":"240","endLine":7,"endColumn":16},{"ruleId":"237","severity":1,"message":"317","line":30,"column":11,"nodeType":"239","messageId":"240","endLine":30,"endColumn":20},{"ruleId":"237","severity":1,"message":"301","line":1,"column":38,"nodeType":"239","messageId":"240","endLine":1,"endColumn":44},{"ruleId":"237","severity":1,"message":"253","line":8,"column":5,"nodeType":"239","messageId":"240","endLine":8,"endColumn":19},{"ruleId":"237","severity":1,"message":"254","line":9,"column":5,"nodeType":"239","messageId":"240","endLine":9,"endColumn":22},{"ruleId":"249","severity":1,"message":"287","line":159,"column":8,"nodeType":"251","endLine":159,"endColumn":18,"suggestions":"318"},{"ruleId":"241","severity":1,"message":"261","line":176,"column":42,"nodeType":"243","messageId":"244","endLine":176,"endColumn":44},{"ruleId":"241","severity":1,"message":"261","line":714,"column":42,"nodeType":"243","messageId":"244","endLine":714,"endColumn":44},{"ruleId":"245","severity":1,"message":"276","line":753,"column":62,"nodeType":"247","messageId":"277","endLine":753,"endColumn":64},{"ruleId":"237","severity":1,"message":"278","line":5,"column":8,"nodeType":"239","messageId":"240","endLine":5,"endColumn":14},{"ruleId":"249","severity":1,"message":"319","line":123,"column":8,"nodeType":"251","endLine":123,"endColumn":18,"suggestions":"320"},{"ruleId":"245","severity":1,"message":"276","line":188,"column":62,"nodeType":"247","messageId":"277","endLine":188,"endColumn":64},{"ruleId":"237","severity":1,"message":"289","line":2,"column":27,"nodeType":"239","messageId":"240","endLine":2,"endColumn":36},{"ruleId":"237","severity":1,"message":"321","line":3,"column":23,"nodeType":"239","messageId":"240","endLine":3,"endColumn":30},{"ruleId":"237","severity":1,"message":"322","line":19,"column":8,"nodeType":"239","messageId":"240","endLine":19,"endColumn":18},{"ruleId":"241","severity":1,"message":"261","line":221,"column":57,"nodeType":"243","messageId":"244","endLine":221,"endColumn":59},{"ruleId":"298","severity":1,"message":"299","line":307,"column":25,"nodeType":"300","endLine":317,"endColumn":27},{"ruleId":"241","severity":1,"message":"261","line":362,"column":55,"nodeType":"243","messageId":"244","endLine":362,"endColumn":57},{"ruleId":"241","severity":1,"message":"261","line":573,"column":58,"nodeType":"243","messageId":"244","endLine":573,"endColumn":60},{"ruleId":"241","severity":1,"message":"261","line":575,"column":63,"nodeType":"243","messageId":"244","endLine":575,"endColumn":65},{"ruleId":"237","severity":1,"message":"289","line":1,"column":27,"nodeType":"239","messageId":"240","endLine":1,"endColumn":36},{"ruleId":"237","severity":1,"message":"323","line":1,"column":38,"nodeType":"239","messageId":"240","endLine":1,"endColumn":45},{"ruleId":"298","severity":1,"message":"299","line":212,"column":25,"nodeType":"300","endLine":226,"endColumn":27},"no-native-reassign",["324"],"no-negated-in-lhs",["325"],["324"],["325"],["324"],["325"],["324"],["325"],"no-unused-vars","'handleShow' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: '_renderImg'. Either include it or remove the dependency array.","ArrayExpression",["326"],"'validatedPhone' is defined but never used.","'validatedPassword' is defined but never used.","'Rating' is defined but never used.","'Box' is defined but never used.","'valueRating' is assigned a value but never used.","'setValueRating' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getDanhSachNgayCong'. Either include it or remove the dependency array.",["327"],"Expected '===' and instead saw '=='.","'ModalDialogUpdateSLNgayCong' is defined but never used.","'ModalDialogDelNgayCong' is defined but never used.","'maNV' is assigned a value but never used.","'setMaNV' is assigned a value but never used.","'SLNgayCong' is assigned a value but never used.","'setSLNgayCong' is assigned a value but never used.","'dateWorking' is assigned a value but never used.","'setDateWorking' is assigned a value but never used.","'nhanXet' is assigned a value but never used.","'setNhanXet' is assigned a value but never used.","'diemDanh' is assigned a value but never used.","'setDiemDanh' is assigned a value but never used.","'danhGia' is assigned a value but never used.","'setDanhGia' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'getDanhSachCongTrinhHT'. Either include it or remove the dependency array.",["328"],"'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useParams' is defined but never used.","'useRouteMatch' is defined but never used.","'ChiTietTienDoCongTrinh' is defined but never used.","React Hook useEffect has a missing dependency: 'getDanhSachCongTrinh'. Either include it or remove the dependency array.",["329"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'keyPress' is assigned a value but never used.","'setKeyPress' is assigned a value but never used.","'resetPass' is defined but never used.","'EventIcon' is defined but never used.","'AssignmentIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getNotify'. Either include it or remove the dependency array.",["330"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getDanhSachNhanVien'. Either include it or remove the dependency array.",["331"],"'useSelector' is defined but never used.","'HelpOutlineIcon' is defined but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","'useState' is defined but never used.","'DARK_LIGHT_MODE' is defined but never used.","'Brightness2Icon' is defined but never used.","'WbSunnyIcon' is defined but never used.","'dispatch' is assigned a value but never used.","'classes' is assigned a value but never used.","'TextForm' is defined but never used.","'styleFlex' is assigned a value but never used.",["332"],"React Hook useEffect has a missing dependency: 'getDanhSachBangLuong'. Either include it or remove the dependency array.",["333"],"'connect' is defined but never used.","'PersonIcon' is defined but never used.","'useMemo' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},"Update the dependencies array to be: [_renderImg]",{"range":"350","text":"351"},"Update the dependencies array to be: [getDanhSachNgayCong, loadDSNC]",{"range":"352","text":"353"},"Update the dependencies array to be: [getDanhSachCongTrinhHT]",{"range":"354","text":"355"},"Update the dependencies array to be: [getDanhSachCongTrinh, loadDSTD]",{"range":"356","text":"357"},"Update the dependencies array to be: [getNotify]",{"range":"358","text":"359"},"Update the dependencies array to be: [getDanhSachNhanVien, loadDSNV]",{"range":"360","text":"361"},"Update the dependencies array to be: [getDanhSachCongTrinh, loadDSCT]",{"range":"362","text":"363"},"Update the dependencies array to be: [getDanhSachBangLuong, loadDSNV]",{"range":"364","text":"365"},[1033,1035],"[_renderImg]",[5223,5233],"[getDanhSachNgayCong, loadDSNC]",[2842,2844],"[getDanhSachCongTrinhHT]",[4053,4063],"[getDanhSachCongTrinh, loadDSTD]",[7496,7498],"[getNotify]",[5273,5283],"[getDanhSachNhanVien, loadDSNV]",[5033,5043],"[getDanhSachCongTrinh, loadDSCT]",[3655,3665],"[getDanhSachBangLuong, loadDSNV]"]